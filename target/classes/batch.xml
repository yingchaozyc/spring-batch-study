<beans xmlns="http://www.springframework.org/schema/beans"  
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"  
    xmlns:batch="http://www.springframework.org/schema/batch"  
    xsi:schemaLocation="http://www.springframework.org/schema/beans  
    http://www.springframework.org/schema/beans/spring-beans.xsd  
    http://www.springframework.org/schema/batch  
    http://www.springframework.org/schema/batch/spring-batch.xsd">  

	<bean id="jobRepository"
		class="org.springframework.batch.core.repository.support.MapJobRepositoryFactoryBean">
		<property name="transactionManager" ref="transactionManager" />
	</bean>
	<bean id="transactionManager"
		class="org.springframework.batch.support.transaction.ResourcelessTransactionManager">
	</bean>
	
	<!-- 
	<bean id="jobLauncher"
		class="org.springframework.batch.core.launch.support.SimpleJobLauncher">
		<property name="jobRepository" ref="jobRepository" />
		<property name="taskExecutor">
			<bean class="org.springframework.core.task.SimpleAsyncTaskExecutor"></bean>
		</property>
	</bean> -->

	<!-- firstStep -->
	<bean id="messageReader"
		class="org.springframework.batch.item.file.FlatFileItemReader">
		<property name="lineMapper" ref="lineMapper">
		</property>
		<property name="resource" value="classpath:abc.txt"></property>
	</bean>
	<bean id="lineMapper"
		class="org.springframework.batch.item.file.mapping.DefaultLineMapper">
		<property name="lineTokenizer">
			<bean
				class="org.springframework.batch.item.file.transform.DelimitedLineTokenizer">
			</bean>
		</property>
		<property name="fieldSetMapper">
			<bean class="com.alibaba.batch.mapper.BatchReader">
			</bean>
		</property>
	</bean>
	
	<bean id="messageProcessor"
		class="com.alibaba.batch.processor.BatchProcessor">
	</bean>
	
	<bean id="messageWriter"
		class="com.alibaba.batch.writer.BatchWriter">
	</bean>
	
	<!-- secondStep -->
	<bean id="secondStepMessageReader" class="org.springframework.batch.item.file.FlatFileItemReader">
		<property name="lineMapper" ref="secondStepLineMapper"></property>
		<property name="resource" value="file:///d:/m.txt"></property>
	</bean>
	<bean id="secondStepLineMapper"
		class="org.springframework.batch.item.file.mapping.DefaultLineMapper">
		<property name="lineTokenizer">
			<bean
				class="org.springframework.batch.item.file.transform.DelimitedLineTokenizer">
			</bean>
		</property>
		<property name="fieldSetMapper">
			<bean class="com.alibaba.batch.mapper.SecondStepBatchReader"/>
		</property>
	</bean>
	
	<bean id="secondStepMessageProcessor"
		class="com.alibaba.batch.processor.SecondStepBatchProcessor">
	</bean>
	
	<bean id="secondStepMessageWriter"
		class="com.alibaba.batch.writer.SecondStepBatchWriter">
	</bean> 
	
	<!-- job -->
	<batch:job id="messageJob">
	  <batch:step id="firstStep">
		  <batch:tasklet>
		    <batch:chunk reader="messageReader" processor="messageProcessor" 
		       writer="messageWriter" commit-interval="5" 
		       chunk-completion-policy="">
			</batch:chunk>
		  </batch:tasklet>
	   </batch:step>  
		
	  <!--  	
	  <batch:step id="firstStep" next="secondStep">
		  <batch:tasklet>
		    <batch:chunk reader="messageReader" processor="messageProcessor" 
		       writer="messageWriter" commit-interval="5" 
		       chunk-completion-policy="">
			</batch:chunk>
		  </batch:tasklet>
	   </batch:step>  
	
	   <batch:step id="secondStep" next="decider">
		  <batch:tasklet>
		    <batch:chunk reader="secondStepMessageReader" processor="secondStepMessageProcessor" 
		       writer="secondStepMessageWriter" commit-interval="5"  skip-limit="1" 
		       chunk-completion-policy="">
		    	<batch:skippable-exception-classes>
      				<batch:include class="java.lang.NullPointerException" /> 
				</batch:skippable-exception-classes>
			</batch:chunk>
			
		    <batch:listeners>  
		   	    <batch:listener ref="chunkBatchListener"/>  
		   	    <batch:listener ref="itemBatchProcessorListener"/>  
		   	    <batch:listener ref="itemBatchReaderListener"/>  
		   	    <batch:listener ref="itemBatchWriterListener"/>   
		    </batch:listeners> 
		  </batch:tasklet>  
	   </batch:step> 
	   
	   <batch:decision id="decider" decider="decider">
	       <batch:next on="FAILED" to="thirdStep" />
		   <batch:next on="COMPLETED" to="fourthStep"/> 
	   </batch:decision>
	   <batch:step id="thirdStep">
	       <batch:tasklet ref="failed" transaction-manager="transactionManager"/>	
	   </batch:step>
	   <batch:step id="fourthStep">
	       <batch:tasklet ref="success" transaction-manager="transactionManager"/>	
	   </batch:step>
	   -->
	   
	   <batch:listeners>  
	   	   <batch:listener ref="jobBatchListener"/>  
	   	   <batch:listener ref="jobBatchPojoListener" after-job-method="afterJob" before-job-method="beforeJob"/>  
	   </batch:listeners> 
	</batch:job> 
	
	<!-- decider -->  
	<bean id="hello" class="com.alibaba.batch.tasklet.DecisionTasklet">
		<property name="message" value="hello"></property>
	</bean> 
	<bean id="success" class="com.alibaba.batch.tasklet.DecisionTasklet">
		<property name="message" value="success"></property>
	</bean> 
	<bean id="failed" class="com.alibaba.batch.tasklet.DecisionTasklet">
		<property name="message" value="failed"></property>
	</bean> 
	<bean id="decider" class="com.alibaba.batch.decider.BatchDecider"/>
	
	<!-- listener -->	
	<bean id="jobBatchListener" class="com.alibaba.batch.listener.JobBatchListener"/> 
	<bean id="jobBatchPojoListener" class="com.alibaba.batch.listener.JobBatchPojoListener"/> 
	
	<bean id="chunkBatchListener" class=" com.alibaba.batch.listener.ChunkBatchListener"/> 
	
	<bean id="itemBatchProcessorListener" class="com.alibaba.batch.listener.ItemBatchProcessorListener"/> 
	<bean id="itemBatchReaderListener" class="com.alibaba.batch.listener.ItemBatchReaderListener"/> 
	<bean id="itemBatchWriterListener" class="com.alibaba.batch.listener.ItemBatchWriterListener"/> 
</beans>



